[tool:pytest]
# Pytest configuration for Mentor Agent tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --maxfail=10
    -ra
    --durations=10

# Markers
markers =
    asyncio: marks tests as async (automatically applied to async test functions)
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    
# Async configuration
asyncio_mode = auto

# Minimum version
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:chromadb.*
    ignore::UserWarning:sqlalchemy.*

# Log configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Coverage options (when --cov is used)
# These are used by pytest-cov plugin
addopts = --cov-config=pytest.ini

[coverage:run]
source = agents/mentor_agent
omit = 
    */tests/*
    */conftest.py
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
precision = 2
skip_covered = false

[coverage:html]
directory = htmlcov
title = Mentor Agent Test Coverage